version: '3'

services:
  nextjs:
    build:
      context: ../srcs/frontend
      dockerfile: ../../docker/frontend/Dockerfile
    volumes:
      - "../srcs/frontend:/app"
    restart: always
    container_name: nextjs
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development

  dynamodb:
    image: amazon/dynamodb-local
    restart: always
    container_name: dynamodb
    ports:
      - "8000:8000"

  golang:
    build:
      context: ../srcs/apiserver
      dockerfile: ../../docker/apiserver/Dockerfile
    volumes:
      - "../srcs/apiserver:/app"
    container_name: golang
    restart: always
    ports:
      - "8080:8080"
    environment:
      - DYNAMODB_ENDPOINT=http://dynamodb:8000
      - AWS_REGION=eu-west-3
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
    depends_on:
      - dynamodb
      - elasticsearch

  elasticsearch:
    container_name: elasticsearch
    build: ./elasticsearch
    ports:
      - "9200:9200"
    environment:
      - ELASTICSEARCH_URL="https://elasticsearch:9200"
      - ELASTIC_PASSWORD="1"
      - ELASTIC_CERT_PASSWORD="1"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  kibana:
    container_name: kibana
    build: ./kibana
    ports:
      - "5601:5601"
    restart: always
    environment:
      - ELASTIC_PASSWORD="1"
    depends_on:
      - elasticsearch
